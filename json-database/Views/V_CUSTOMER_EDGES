WITH CTE_BEGINNING AS(
    SELECT KUNDE, E.EXPERIMENT_ID, MIN(I_TIMEBASE) AS TIMEBASE
	FROM RAWDATA R
	JOIN EXPERIMENTS E ON E.FILE_ID = R.FILE_ID
GROUP BY KUNDE, E.EXPERIMENT_ID
),
CTE_ALIVE AS (
    SELECT
        KUNDE,
        MIN(I_TIMEBASE) AS MIN_TIMEBASE,
        MAX(I_TIMEBASE) AS MAX_TIMEBASE,
        EXPERIMENT_ID
    FROM V_EXPERIMENT_RAWDATA
    WHERE I_ALIVE = 1
    GROUP BY KUNDE, EXPERIMENT_ID
),
CTE_CHURNED AS (
    SELECT
        KUNDE,
        MIN(I_TIMEBASE) AS MIN_TIMEBASE,
        MAX(I_TIMEBASE) AS MAX_TIMEBASE,
        EXPERIMENT_ID
    FROM V_EXPERIMENT_RAWDATA
    WHERE I_ALIVE = 0
    GROUP BY KUNDE, EXPERIMENT_ID
),
CTE_RESULT AS (
    -- 1️⃣ KUNDEN, DIE KONSTANT AKTIV SIND (KEIN CHURN JEMALS)
    SELECT 
        A.KUNDE,
        'CONSTANT' AS TYPE,
        1 AS I_ALIVE,
        A.MIN_TIMEBASE,
        A.MAX_TIMEBASE,
        A.EXPERIMENT_ID
    FROM CTE_ALIVE A
    WHERE A.KUNDE NOT IN (
        SELECT C.KUNDE 
        FROM CTE_CHURNED C 
        WHERE C.EXPERIMENT_ID = A.EXPERIMENT_ID
    )

    UNION ALL

    -- 2️⃣ KUNDEN, DIE GEKÜNDIGT HABEN (CHURN NACH AKTIVPHASE)
    SELECT
        C.KUNDE,
        'CHURNED' AS TYPE,
        0 AS I_ALIVE,
        COALESCE(A.MIN_TIMEBASE, C.MIN_TIMEBASE) AS MIN_TIMEBASE,
        C.MAX_TIMEBASE,
        C.EXPERIMENT_ID
    FROM CTE_ALIVE A
    RIGHT JOIN CTE_CHURNED C 
        ON C.KUNDE = A.KUNDE
        AND C.EXPERIMENT_ID = A.EXPERIMENT_ID
    WHERE 
        (A.MAX_TIMEBASE IS NOT NULL AND C.MAX_TIMEBASE > A.MAX_TIMEBASE)
        OR (A.MAX_TIMEBASE IS NULL AND C.MAX_TIMEBASE IS NOT NULL)

    UNION ALL

    -- 3️⃣ KUNDEN MIT WINBACK (KÜNDIGUNG, DANN WIEDER AKTIV)
    SELECT
        A.KUNDE,
        'WINBACK' AS TYPE,
        1 AS I_ALIVE,
        C.MAX_TIMEBASE AS CHURNED_AT,
        A.MAX_TIMEBASE AS RETURNED_AT,
        A.EXPERIMENT_ID
    FROM CTE_ALIVE A
    JOIN CTE_CHURNED C 
        ON C.KUNDE = A.KUNDE
        AND C.EXPERIMENT_ID = A.EXPERIMENT_ID
    WHERE A.MAX_TIMEBASE > C.MAX_TIMEBASE
)
SELECT 
    R.KUNDE,
    R.TYPE,
    R.I_ALIVE,
    B.TIMEBASE AS BEGINNING_TIMEBASE,
    R.MIN_TIMEBASE AS BACKTEST_MIN_TIMEBASE,
    R.MAX_TIMEBASE AS BACKTEST_MAX_TIMEBASE,
    R.EXPERIMENT_ID
FROM CTE_RESULT R
JOIN CTE_BEGINNING B 
  ON B.KUNDE = R.KUNDE 
 AND B.EXPERIMENT_ID = R.EXPERIMENT_ID
ORDER BY R.KUNDE, R.EXPERIMENT_ID
